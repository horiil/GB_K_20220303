/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.79
 * Generated at: 2022-06-30 13:05:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.payment;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gushipsam.payment.dao.CartDTO;
import java.util.List;
import java.text.DecimalFormat;

public final class cart_005fajax_005ftb_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1656589161226L));
    _jspx_dependants.put("jar:file:/C:/0900_GB_KSH/jsp/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp21/wtpwebapps/nine_three2/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.gushipsam.payment.dao.CartDTO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.text.DecimalFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	DecimalFormat df = new DecimalFormat("###,###");

      out.write("\r\n");
      out.write("<table id=\"order_tb\">\r\n");
      out.write("	<colgroup>\r\n");
      out.write("		<col width=\"2.5%\">\r\n");
      out.write("		<col width=\"60%\">\r\n");
      out.write("		<col width=\"15%\">\r\n");
      out.write("		<col width=\"7.5%\">\r\n");
      out.write("		<col width=\"15%\">\r\n");
      out.write("	</colgroup>\r\n");
      out.write("	<thead>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"5\">\r\n");
      out.write("				<h3 class=\"title\">구십삼 주문상품</h3>\r\n");
      out.write("				<div style=\"height: 10px\"></div>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"table_top\">\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">\r\n");
      out.write("					<input type=\"checkbox\" name=\"chk_all\" id=\"chk_all\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">상품정보</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">판매가</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">수량</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">구매가</div>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</thead>\r\n");
      out.write("	<tbody>\r\n");
      out.write("		");

			List<CartDTO> cartList = (List) request.getAttribute("cartList");
		
      out.write("\r\n");
      out.write("		");

			for (CartDTO item : cartList) {
		
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">\r\n");
      out.write("					<input type=\"checkbox\" name=\"chk\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<table class=\"goods_tb\">\r\n");
      out.write("					<colgroup>\r\n");
      out.write("						<col width=\"20%\">\r\n");
      out.write("						<col width=\"80%\">\r\n");
      out.write("					</colgroup>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td rowspan=\"2\">\r\n");
      out.write("							");

								String foldername = null;
									String catg = item.getgCATG();
									String img = item.getgIMGS();

									switch (catg) {
									case "냉장고":
										foldername = "fridge";
										break;
									case "세탁기":
										foldername = "washer";
										break;
									case "TV":
										foldername = "tv";
										break;
									case "에어컨":
										foldername = "ac";
										break;
									case "컴퓨터":
										foldername = "pc";
										break;
									}
							
      out.write(" <a\r\n");
      out.write("							href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/goodsDetail.goods?gID=");
      out.print(item.getgID() );
      out.write("\">\r\n");
      out.write("								<img\r\n");
      out.write("								src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/");
      out.print(foldername );
      out.write('/');
      out.print(img );
      out.write("\"\r\n");
      out.write("								style=\"width: 100%\">\r\n");
      out.write("						</a>\r\n");
      out.write("						</td>\r\n");
      out.write("						<td id=\"brand\">");
      out.print(item.getgBRAND());
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>");
      out.print(item.getgNAME());
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</td>\r\n");
      out.write("			");

				int price = item.getgPRICE();
					int qty = item.getcQTY();
			
      out.write("\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">");
      out.print(df.format(price));
      out.write("</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">");
      out.print(qty);
      out.write("</div>\r\n");
      out.write("			</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<div class=\"align_center\">");
      out.print(df.format(price * qty));
      out.write("</div>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");

			}
		
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"5\" style=\"height: 150px\" id=\"zerocart\">\r\n");
      out.write("				<div class=\"align_center\" style=\"font-size: 30px\">¯\\_(ツ)_/¯</div>\r\n");
      out.write("				<div class=\"align_center\"\r\n");
      out.write("					style=\"font-size: 17px; font-weight: bold;\">장바구니에 저장된 상품이\r\n");
      out.write("					없습니다.</div>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</tbody>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/cart06.js\"></script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
